/**
 * –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Å–æ–æ–±—â–µ–Ω–∏—è –æ –∑–∞–∫–∞–∑–µ –¥–ª—è Telegram
 */

import { MenuItem } from '@/types';
import { CheckoutData } from '@/components/CheckoutForm';

interface OrderMessageParams {
  orderId: string;
  checkoutData: CheckoutData;
  cartItems: Array<{ item: MenuItem; quantity: number }>;
  cutleryCount: number;
  totalPrice: number;
}

/**
 * –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –∑–∞–∫–∞–∑–µ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ Telegram
 */
export const formatOrderMessage = ({
  orderId,
  checkoutData,
  cartItems,
  cutleryCount,
  totalPrice,
}: OrderMessageParams): string => {
  const itemsList = cartItems
    .map((item) => {
      const itemTotal = item.item.price * item.quantity;
      return `‚Ä¢ ${item.item.name} √ó ${item.quantity} = ${itemTotal} RSD`;
    })
    .join('\n');

  const deliveryAddress = [
    `–£–ª–∏—Ü–∞: ${checkoutData.street}`,
    `–î–æ–º: ${checkoutData.building}, –ö–≤–∞—Ä—Ç–∏—Ä–∞: ${checkoutData.apartment}`,
    checkoutData.code ? `–ö–æ–¥: ${checkoutData.code}` : '',
    checkoutData.deliveryNote ? `–û—Ç–º–µ—Ç–∫–∞ –¥–ª—è –∫—É—Ä—å–µ—Ä–∞: ${checkoutData.deliveryNote}` : '',
  ]
    .filter(Boolean)
    .join('\n');

  const contactInfo =
    checkoutData.contactMethod === 'telegram'
      ? 'Telegram'
      : `–¢–µ–ª–µ—Ñ–æ–Ω: ${checkoutData.phone}`;

  let paymentInfo = '';
  if (checkoutData.paymentMethod === 'cash') {
    paymentInfo = '–ù–∞–ª–∏—á–Ω—ã–µ';
    if (checkoutData.changeFrom) {
      const change = checkoutData.changeFrom - totalPrice;
      paymentInfo += `\n–°–¥–∞—á–∞ —Å ${checkoutData.changeFrom} RSD (—Å–¥–∞—á–∞: ${change} RSD)`;
    } else {
      paymentInfo += '\n–°–¥–∞—á–∞ –Ω–µ —Ç—Ä–µ–±—É–µ—Ç—Å—è (–∫—É—Ä—å–µ—Ä –ø–æ–¥–≥–æ—Ç–æ–≤–∏—Ç —Å –±–ª–∏–∂–∞–π—à–µ–π –∫—Ä—É–ø–Ω–æ–π –∫—É–ø—é—Ä—ã)';
    }
  } else {
    paymentInfo = '–ë–∞–Ω–∫–æ–≤—Å–∫–∞—è –∫–∞—Ä—Ç–∞';
  }

  const message = `
üõí *–ù–û–í–´–ô –ó–ê–ö–ê–ó ${orderId}*

üë§ *–ò–º—è:* ${checkoutData.name}

üì¶ *–¢–æ–≤–∞—Ä—ã:*
${itemsList}

üç¥ *–ü—Ä–∏–±–æ—Ä—ã:* ${cutleryCount} —à—Ç.

üí∞ *–ò—Ç–æ–≥–æ:* ${totalPrice} RSD

üìç *–ê–¥—Ä–µ—Å –¥–æ—Å—Ç–∞–≤–∫–∏:*
${deliveryAddress}

üìû *–ö–æ–Ω—Ç–∞–∫—Ç:*
${contactInfo}

üí≥ *–°–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã:*
${paymentInfo}

${checkoutData.comment ? `üí¨ *–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π:*\n${checkoutData.comment}` : ''}
  `.trim();

  return message;
};

/**
 * –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç –¥–∞–Ω–Ω—ã–µ –∑–∞–∫–∞–∑–∞ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ –±–æ—Ç–∞
 */
export const formatOrderData = ({
  orderId,
  checkoutData,
  cartItems,
  cutleryCount,
  totalPrice,
}: OrderMessageParams) => {
  return {
    type: 'order',
    data: {
      orderId,
      items: cartItems.map((item) => ({
        id: item.item.id,
        name: item.item.name,
        price: item.item.price,
        quantity: item.quantity,
      })),
      total: totalPrice,
      cutleryCount,
      ...checkoutData,
    },
  };
};

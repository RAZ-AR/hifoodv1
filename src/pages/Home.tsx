import React, { useState, useEffect } from 'react';
import { MenuItem } from '@/types';
import { api } from '@/services/api';
import ProductCard from '@/components/ProductCard';
import CategoryFilter from '@/components/CategoryFilter';
import { useCart } from '@/context/CartContext';

/**
 * –ì–õ–ê–í–ù–ê–Ø –°–¢–†–ê–ù–ò–¶–ê (–ú–ï–ù–Æ)
 *
 * –û—Ç–æ–±—Ä–∞–∂–∞–µ—Ç:
 * - –§–∏–ª—å—Ç—Ä –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º
 * - –°–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –±–ª—é–¥ –∏–∑ API
 * - –ó–∞–≥—Ä—É–∑–∫—É –∏ –æ—à–∏–±–∫–∏
 */
const Home: React.FC = () => {
  const { addToCart } = useCart();
  const [menuItems, setMenuItems] = useState<MenuItem[]>([]);
  const [filteredItems, setFilteredItems] = useState<MenuItem[]>([]);
  const [selectedCategory, setSelectedCategory] = useState<string>('–í—Å–µ');
  const [loading, setLoading] = useState<boolean>(true);
  const [error, setError] = useState<string | null>(null);

  // –ü–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –∫–∞—Ç–µ–≥–æ—Ä–∏–π –∏–∑ –º–µ–Ω—é
  const categories = ['–í—Å–µ', ...Array.from(new Set(menuItems.map(item => item.category)))];

  // –ó–∞–≥—Ä—É–∑–∏—Ç—å –º–µ–Ω—é –ø—Ä–∏ –º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞
  useEffect(() => {
    loadMenu();
  }, []);

  // –§–∏–ª—å—Ç—Ä–æ–≤–∞—Ç—å –º–µ–Ω—é –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
  useEffect(() => {
    if (selectedCategory === '–í—Å–µ') {
      setFilteredItems(menuItems);
    } else {
      setFilteredItems(menuItems.filter(item => item.category === selectedCategory));
    }
  }, [selectedCategory, menuItems]);

  const loadMenu = async () => {
    try {
      setLoading(true);
      setError(null);

      // –ó–∞–≥—Ä—É–∂–∞–µ–º –º–µ–Ω—é –∏–∑ API
      const items = await api.getMenu({ available: true });
      setMenuItems(items);
      setFilteredItems(items);
    } catch (err) {
      console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –º–µ–Ω—é:', err);
      setError('–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –º–µ–Ω—é. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
    } finally {
      setLoading(false);
    }
  };

  const handleCategoryChange = (category: string) => {
    setSelectedCategory(category);
  };

  const handleAddToCart = (item: MenuItem) => {
    addToCart(item);

    // –ò—Å–ø–æ–ª—å–∑—É–µ–º Telegram Web App API –¥–ª—è haptic feedback
    if (window.Telegram?.WebApp) {
      window.Telegram.WebApp.HapticFeedback.impactOccurred('light');
    }
  };

  const handleFavoriteToggle = (item: MenuItem) => {
    // TODO: –†–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ/—É–¥–∞–ª–µ–Ω–∏–µ –∏–∑ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ
    console.log('–ü–µ—Ä–µ–∫–ª—é—á–∏—Ç—å –∏–∑–±—Ä–∞–Ω–Ω–æ–µ:', item);

    // –ò—Å–ø–æ–ª—å–∑—É–µ–º Telegram Web App API –¥–ª—è haptic feedback
    if (window.Telegram?.WebApp) {
      window.Telegram.WebApp.HapticFeedback.impactOccurred('light');
    }
  };

  // –°–æ—Å—Ç–æ—è–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏
  if (loading) {
    return (
      <div className="min-h-screen flex items-center justify-center">
        <div className="text-center">
          <div className="animate-spin rounded-full h-12 w-12 border-b-2 border-primary-500 mx-auto mb-4"></div>
          <p className="tg-theme-hint">–ó–∞–≥—Ä—É–∂–∞–µ–º –º–µ–Ω—é...</p>
        </div>
      </div>
    );
  }

  // –°–æ—Å—Ç–æ—è–Ω–∏–µ –æ—à–∏–±–∫–∏
  if (error) {
    return (
      <div className="min-h-screen flex items-center justify-center px-4">
        <div className="text-center">
          <span className="text-5xl mb-4 block">üòû</span>
          <h2 className="text-xl font-bold tg-theme-text mb-2">–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏</h2>
          <p className="tg-theme-hint mb-4">{error}</p>
          <button
            onClick={loadMenu}
            className="px-6 py-2 bg-primary-500 text-white rounded-lg hover:bg-primary-600"
          >
            –ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å —Å–Ω–æ–≤–∞
          </button>
        </div>
      </div>
    );
  }

  // –ü—É—Å—Ç–æ–µ –º–µ–Ω—é
  if (menuItems.length === 0) {
    return (
      <div className="min-h-screen flex items-center justify-center px-4">
        <div className="text-center">
          <span className="text-5xl mb-4 block">üçΩÔ∏è</span>
          <h2 className="text-xl font-bold tg-theme-text mb-2">–ú–µ–Ω—é –ø—É—Å—Ç–æ</h2>
          <p className="tg-theme-hint">–í –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –±–ª—é–¥</p>
        </div>
      </div>
    );
  }

  return (
    <div className="pb-20">
      {/* –§–∏–ª—å—Ç—Ä –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º */}
      <CategoryFilter
        categories={categories}
        selectedCategory={selectedCategory}
        onCategoryChange={handleCategoryChange}
      />

      {/* –°–ø–∏—Å–æ–∫ –±–ª—é–¥ */}
      <div className="max-w-7xl mx-auto px-4 py-6">
        {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ */}
        <div className="mb-4">
          <h2 className="text-2xl font-bold tg-theme-text">
            {selectedCategory}
          </h2>
          <p className="text-sm tg-theme-hint mt-1">
            {filteredItems.length} {filteredItems.length === 1 ? '–±–ª—é–¥–æ' : '–±–ª—é–¥'}
          </p>
        </div>

        {/* –°–µ—Ç–∫–∞ –∫–∞—Ä—Ç–æ—á–µ–∫ */}
        {filteredItems.length > 0 ? (
          <div className="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-4">
            {filteredItems.map((item) => (
              <ProductCard
                key={item.id}
                item={item}
                onAddToCart={handleAddToCart}
                onFavoriteToggle={handleFavoriteToggle}
                isFavorite={false} // TODO: –ü–æ–ª—É—á–∏—Ç—å –∏–∑ —Å—Ç–µ–π—Ç–∞ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ
              />
            ))}
          </div>
        ) : (
          <div className="text-center py-12">
            <span className="text-4xl mb-4 block">üîç</span>
            <p className="tg-theme-hint">
              –ù–µ—Ç –±–ª—é–¥ –≤ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ "{selectedCategory}"
            </p>
          </div>
        )}
      </div>
    </div>
  );
};

export default Home;

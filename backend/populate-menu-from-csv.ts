import { createClient } from '@supabase/supabase-js';
import dotenv from 'dotenv';
import * as fs from 'fs';
import * as path from 'path';

// –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
dotenv.config({ path: path.join(__dirname, '../.env') });

const supabaseUrl = process.env.SUPABASE_URL!;
const supabaseKey = process.env.SUPABASE_KEY || process.env.SUPABASE_SERVICE_ROLE_KEY!;

const supabase = createClient(supabaseUrl, supabaseKey);

// ============================================
// –§—É–Ω–∫—Ü–∏—è –ø–∞—Ä—Å–∏–Ω–≥–∞ CSV
// ============================================

function parseCSV(csvContent: string): any[] {
  const lines = csvContent.trim().split('\n');
  if (lines.length === 0) return [];

  const headers = lines[0]!.split(',');

  return lines.slice(1).map(line => {
    const values = line.split(',');
    const obj: any = {};

    headers.forEach((header, index) => {
      const value = values[index];
      obj[header.trim()] = value ? value.trim() : '';
    });

    return obj;
  });
}

// ============================================
// –§—É–Ω–∫—Ü–∏—è –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
// ============================================

async function populateMenuFromCSV() {
  console.log('üöÄ –ù–∞—á–∏–Ω–∞–µ–º –∑–∞–≥—Ä—É–∑–∫—É –º–µ–Ω—é –∏–∑ CSV...\n');

  try {
    // –ß–∏—Ç–∞–µ–º CSV —Ñ–∞–π–ª
    const csvPath = path.join(__dirname, '../google-sheets-data/2_menu_sheet.csv');
    console.log(`üìÇ –ß–∏—Ç–∞–µ–º —Ñ–∞–π–ª: ${csvPath}`);

    const csvContent = fs.readFileSync(csvPath, 'utf-8');
    const rawData = parseCSV(csvContent);

    console.log(`üìä –ù–∞–π–¥–µ–Ω–æ ${rawData.length} –ø–æ–∑–∏—Ü–∏–π –≤ CSV\n`);

    // –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –¥–∞–Ω–Ω—ã–µ –≤ —Ñ–æ—Ä–º–∞—Ç Supabase
    // –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ç–æ–ª—å–∫–æ —Ç–µ –ø–æ–ª—è, –∫–æ—Ç–æ—Ä—ã–µ —Ç–æ—á–Ω–æ —Å—É—â–µ—Å—Ç–≤—É—é—Ç –≤ —Ç–∞–±–ª–∏—Ü–µ menu
    const menuData = rawData.map(item => ({
      category: item.category,
      name: item.name,
      description: item.description,
      price: parseFloat(item.price),
      image_url: item.image_url,
      ingredients: item.ingredients ? item.ingredients.split(',').map((i: string) => i.trim()) : [],
      available: item.available === 'true',  // –∏—Å–ø–æ–ª—å–∑—É–µ–º available, –Ω–µ is_available
      rating: parseFloat(item.rating) || 4.5,  // –¥–æ–±–∞–≤–ª—è–µ–º rating
      preparation_time: parseInt(item.preparation_time) || 20,  // –¥–æ–±–∞–≤–ª—è–µ–º preparation_time
      allergens: item.allergens ? item.allergens.split(',').map((a: string) => a.trim()).filter((a: string) => a) : [],
    }));

    console.log('üçï –ó–∞–ø–æ–ª–Ω—è–µ–º —Ç–∞–±–ª–∏—Ü—É menu...');
    console.log('üìù –ü–µ—Ä–≤—ã–µ 3 –ø–æ–∑–∏—Ü–∏–∏ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏:');
    menuData.slice(0, 3).forEach(item => {
      console.log(`   - ${item.name} (${item.category}) - ${item.price} RSD`);
    });
    console.log('');

    // –û—á–∏—â–∞–µ–º —Ç–∞–±–ª–∏—Ü—É –ø–µ—Ä–µ–¥ –∑–∞–≥—Ä—É–∑–∫–æ–π (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
    console.log('üóëÔ∏è  –û—á–∏—â–∞–µ–º —Ç–µ–∫—É—â–∏–µ –¥–∞–Ω–Ω—ã–µ –º–µ–Ω—é...');
    const { error: deleteError } = await supabase
      .from('menu')
      .delete()
      .neq('id', '00000000-0000-0000-0000-000000000000'); // —É–¥–∞–ª—è–µ–º –≤—Å–µ –∑–∞–ø–∏—Å–∏

    if (deleteError) {
      console.warn('‚ö†Ô∏è  –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ –ø—Ä–∏ –æ—á–∏—Å—Ç–∫–µ:', deleteError.message);
    } else {
      console.log('‚úÖ –°—Ç–∞—Ä—ã–µ –¥–∞–Ω–Ω—ã–µ —É–¥–∞–ª–µ–Ω—ã\n');
    }

    // –ó–∞–≥—Ä—É–∂–∞–µ–º –Ω–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
    const { data: menu, error: menuError } = await supabase
      .from('menu')
      .insert(menuData)
      .select();

    if (menuError) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏–∏ menu:', menuError.message);
      console.error('–î–µ—Ç–∞–ª–∏ –æ—à–∏–±–∫–∏:', menuError);
      process.exit(1);
    } else {
      console.log(`‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–æ ${menu?.length || 0} –±–ª—é–¥ –≤ –º–µ–Ω—é!\n`);

      // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –¥–æ–±–∞–≤–ª–µ–Ω–Ω—ã–µ –±–ª—é–¥–∞
      console.log('üìã –í—Å–µ –¥–æ–±–∞–≤–ª–µ–Ω–Ω—ã–µ –±–ª—é–¥–∞:');
      menu?.forEach((item, index) => {
        console.log(`${index + 1}. ${item.name} (${item.category}) - ${item.price} RSD`);
      });
    }

    console.log('\nüéâ –ì–æ—Ç–æ–≤–æ! –ú–µ–Ω—é —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω–æ –≤ Supabase!');
    console.log('\nüìä –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:');
    console.log('1. –û—Ç–∫—Ä–æ–π—Ç–µ Supabase Table Editor: https://supabase.com/dashboard/project/ydhyiqnzlzvswqucmboq/editor');
    console.log('2. –ü–æ—Å–º–æ—Ç—Ä–∏—Ç–µ —Ç–∞–±–ª–∏—Ü—É menu - —Ç–∞–º –≤—Å–µ –≤–∞—à–∏ –±–ª—é–¥–∞');
    console.log('3. –û—Ç–∫—Ä–æ–π—Ç–µ Mini App –∏ –ø—Ä–æ–≤–µ—Ä—å—Ç–µ, —á—Ç–æ –º–µ–Ω—é –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è\n');

  } catch (error: any) {
    console.error('‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞:', error.message);
    console.error('Stack trace:', error.stack);
    process.exit(1);
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º
populateMenuFromCSV();

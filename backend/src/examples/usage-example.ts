/**
 * –ü–†–ò–ú–ï–† –ò–°–ü–û–õ–¨–ó–û–í–ê–ù–ò–Ø DATA PROVIDER API
 *
 * –≠—Ç–æ—Ç —Ñ–∞–π–ª –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç, –∫–∞–∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å Data Provider
 * –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏, –º–µ–Ω—é, –∑–∞–∫–∞–∑–∞–º–∏ –∏ –±–æ–Ω—É—Å–∞–º–∏
 */

import { getDataProviderInstance } from '../services/dataProvider';
import { User, Order, MenuItem } from '../types';

async function main() {
  // –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Å—Ç–∞–Ω—Å –ø—Ä–æ–≤–∞–π–¥–µ—Ä–∞ (–∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∏–∑ .env)
  const db = getDataProviderInstance();

  console.log('üöÄ –ù–∞—á–∏–Ω–∞–µ–º —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ Data Provider API\n');

  // ==========================================
  // 1. –†–ê–ë–û–¢–ê –° –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–Ø–ú–ò
  // ==========================================

  console.log('üìù 1. –°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è...');

  const newUser = await db.createUser({
    telegram_id: 123456789,
    telegram_username: '@testuser',
    first_name: '–ò–≤–∞–Ω',
    last_name: '–ò–≤–∞–Ω–æ–≤',
    phone: '+381641234567',
    email: 'ivan@example.com',
    addresses: [],
    payment_methods: [{
      id: 'cash',
      type: 'cash',
      is_default: true,
    }],
    favorite_dishes: [],
    preferred_language: 'ru',
    notifications_enabled: true,
  });

  console.log(`‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å–æ–∑–¥–∞–Ω!`);
  console.log(`   ID: ${newUser.user_id}`);
  console.log(`   –ö–∞—Ä—Ç–∞ –ª–æ—è–ª—å–Ω–æ—Å—Ç–∏: #${newUser.loyalty_card_number} üé¥`);
  console.log(`   –î–∞—Ç–∞ –≤—ã–¥–∞—á–∏ –∫–∞—Ä—Ç—ã: ${newUser.loyalty_card_issued_date}`);
  console.log(`   –ë–æ–Ω—É—Å–æ–≤: ${newUser.bonus_balance}\n`);

  // ==========================================
  // 2. –ü–û–ò–°–ö –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–Ø
  // ==========================================

  console.log('üîç 2. –ü–æ–∏—Å–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ Telegram ID...');

  const foundUser = await db.getUserByTelegramId(123456789);

  if (foundUser) {
    console.log(`‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–π–¥–µ–Ω: ${foundUser.first_name}`);
    console.log(`   –ö–∞—Ä—Ç–∞ –ª–æ—è–ª—å–Ω–æ—Å—Ç–∏: #${foundUser.loyalty_card_number}\n`);
  }

  console.log('üîç 3. –ü–æ–∏—Å–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ –Ω–æ–º–µ—Ä—É –∫–∞—Ä—Ç—ã...');

  const userByCard = await db.getUserByLoyaltyCard(newUser.loyalty_card_number);

  if (userByCard) {
    console.log(`‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–π–¥–µ–Ω –ø–æ –∫–∞—Ä—Ç–µ #${userByCard.loyalty_card_number}`);
    console.log(`   –ò–º—è: ${userByCard.first_name} ${userByCard.last_name}\n`);
  }

  // ==========================================
  // 3. –†–ê–ë–û–¢–ê –° –ú–ï–ù–Æ
  // ==========================================

  console.log('üçï 4. –ü–æ–ª—É—á–µ–Ω–∏–µ –º–µ–Ω—é...');

  const menu = await db.getMenu();

  console.log(`‚úÖ –ó–∞–≥—Ä—É–∂–µ–Ω–æ –±–ª—é–¥: ${menu.length}`);

  if (menu.length > 0) {
    const firstDish = menu[0];
    console.log(`   –ü–µ—Ä–≤–æ–µ –±–ª—é–¥–æ: ${firstDish.name}`);
    console.log(`   –¶–µ–Ω–∞: ${firstDish.price} DIN`);
    console.log(`   –†–µ–π—Ç–∏–Ω–≥: ${firstDish.rating} ‚≠ê\n`);
  }

  // –ü–æ–ª—É—á–µ–Ω–∏–µ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
  console.log('üçï 5. –ü–æ–ª—É—á–µ–Ω–∏–µ –±–ª—é–¥ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ "Pizza"...');

  const pizzas = await db.getMenuByCategory('Pizza');

  console.log(`‚úÖ –ù–∞–π–¥–µ–Ω–æ –ø–∏—Ü—Ü: ${pizzas.length}\n`);

  // ==========================================
  // 4. –†–ê–ë–û–¢–ê –° –ê–î–†–ï–°–ê–ú–ò
  // ==========================================

  console.log('üè† 6. –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∞–¥—Ä–µ—Å–∞ –¥–æ—Å—Ç–∞–≤–∫–∏...');

  const updatedUser = await db.addAddress(newUser.user_id, {
    label: '–î–æ–º',
    street: 'Kneza Milo≈°a',
    building: '10',
    apartment: '25',
    entrance: '2',
    floor: '5',
    comment: '–î–æ–º–æ—Ñ–æ–Ω –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç, –∑–≤–æ–Ω–∏—Ç–µ –∑–∞—Ä–∞–Ω–µ–µ',
    is_default: true,
  });

  console.log(`‚úÖ –ê–¥—Ä–µ—Å –¥–æ–±–∞–≤–ª–µ–Ω!`);
  console.log(`   –ê–¥—Ä–µ—Å–æ–≤ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: ${updatedUser.addresses.length}\n`);

  // ==========================================
  // 5. –°–û–ó–î–ê–ù–ò–ï –ó–ê–ö–ê–ó–ê
  // ==========================================

  console.log('üõí 7. –°–æ–∑–¥–∞–Ω–∏–µ –∑–∞–∫–∞–∑–∞...');

  if (menu.length > 0 && updatedUser.addresses.length > 0) {
    const dish = menu[0];

    const order = await db.createOrder({
      user_id: updatedUser.user_id,
      user_name: updatedUser.first_name,
      user_phone: updatedUser.phone || '',
      loyalty_card_number: updatedUser.loyalty_card_number, // –ö–∞—Ä—Ç–∞ –∏–∑ –ø—Ä–æ—Ñ–∏–ª—è!
      items: [
        {
          dish_id: dish.id,
          name: dish.name,
          price: dish.price,
          quantity: 2,
          subtotal: dish.price * 2,
        },
      ],
      subtotal: dish.price * 2,
      delivery_fee: dish.price * 2 >= 2000 ? 0 : 300, // –ë–µ—Å–ø–ª–∞—Ç–Ω–∞—è –¥–æ—Å—Ç–∞–≤–∫–∞ –æ—Ç 2000 DIN
      total_amount: dish.price * 2 + (dish.price * 2 >= 2000 ? 0 : 300),
      delivery_address: updatedUser.addresses[0],
      delivery_time: 'now',
      payment_method: updatedUser.payment_methods[0],
      bonus_applied: 0,
      status: 'pending',
    });

    console.log(`‚úÖ –ó–∞–∫–∞–∑ —Å–æ–∑–¥–∞–Ω!`);
    console.log(`   ID –∑–∞–∫–∞–∑–∞: ${order.order_id}`);
    console.log(`   –ö–∞—Ä—Ç–∞ –ª–æ—è–ª—å–Ω–æ—Å—Ç–∏ –≤ –∑–∞–∫–∞–∑–µ: #${order.loyalty_card_number} üé¥`);
    console.log(`   –°—É–º–º–∞: ${order.total_amount} DIN`);
    console.log(`   –î–æ—Å—Ç–∞–≤–∫–∞: ${order.delivery_fee} DIN`);
    console.log(`   –°—Ç–∞—Ç—É—Å: ${order.status}\n`);

    // ==========================================
    // 6. –ù–ê–ß–ò–°–õ–ï–ù–ò–ï –ë–û–ù–£–°–û–í
    // ==========================================

    console.log('üí∞ 8. –ù–∞—á–∏—Å–ª–µ–Ω–∏–µ –±–æ–Ω—É—Å–æ–≤ –∑–∞ –∑–∞–∫–∞–∑...');

    // –ù–∞—á–∏—Å–ª—è–µ–º 10% –æ—Ç —Å—É–º–º—ã –∑–∞–∫–∞–∑–∞ –≤ –±–æ–Ω—É—Å–∞—Ö
    const bonusAmount = Math.floor(order.total_amount * 0.1);

    const bonusTransaction = await db.addBonus(
      updatedUser.user_id,
      bonusAmount,
      undefined,
      order.order_id
    );

    console.log(`‚úÖ –ë–æ–Ω—É—Å—ã –Ω–∞—á–∏—Å–ª–µ–Ω—ã!`);
    console.log(`   –°—É–º–º–∞: +${bonusAmount} –±–æ–Ω—É—Å–æ–≤`);
    console.log(`   –ë–∞–ª–∞–Ω—Å –¥–æ: ${bonusTransaction.balance_before}`);
    console.log(`   –ë–∞–ª–∞–Ω—Å –ø–æ—Å–ª–µ: ${bonusTransaction.balance_after}\n`);

    // ==========================================
    // 7. –ò–ó–ú–ï–ù–ï–ù–ò–ï –°–¢–ê–¢–£–°–ê –ó–ê–ö–ê–ó–ê
    // ==========================================

    console.log('üì¶ 9. –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ –∑–∞–∫–∞–∑–∞...');

    const updatedOrder = await db.updateOrderStatus(order.order_id, 'confirmed');

    console.log(`‚úÖ –°—Ç–∞—Ç—É—Å –æ–±–Ω–æ–≤–ª–µ–Ω: ${updatedOrder.status}\n`);

    // ==========================================
    // 8. –ò–°–¢–û–†–ò–Ø –ó–ê–ö–ê–ó–û–í
    // ==========================================

    console.log('üìã 10. –ü–æ–ª—É—á–µ–Ω–∏–µ –∏—Å—Ç–æ—Ä–∏–∏ –∑–∞–∫–∞–∑–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è...');

    const userOrders = await db.getUserOrders(updatedUser.user_id);

    console.log(`‚úÖ –í—Å–µ–≥–æ –∑–∞–∫–∞–∑–æ–≤: ${userOrders.length}`);

    userOrders.forEach((o, index) => {
      console.log(`   ${index + 1}. –ó–∞–∫–∞–∑ ${o.order_id}`);
      console.log(`      –ö–∞—Ä—Ç–∞: #${o.loyalty_card_number}`);
      console.log(`      –°—É–º–º–∞: ${o.total_amount} DIN`);
      console.log(`      –°—Ç–∞—Ç—É—Å: ${o.status}`);
    });
    console.log('');
  }

  // ==========================================
  // 9. –ò–ó–ë–†–ê–ù–ù–û–ï
  // ==========================================

  if (menu.length > 0) {
    console.log('‚ù§Ô∏è 11. –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –±–ª—é–¥–∞ –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ...');

    await db.addToFavorites(newUser.user_id, menu[0].id);

    console.log(`‚úÖ –ë–ª—é–¥–æ "${menu[0].name}" –¥–æ–±–∞–≤–ª–µ–Ω–æ –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ\n`);

    console.log('‚ù§Ô∏è 12. –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–∑–±—Ä–∞–Ω–Ω—ã—Ö –±–ª—é–¥...');

    const favorites = await db.getFavorites(newUser.user_id);

    console.log(`‚úÖ –ò–∑–±—Ä–∞–Ω–Ω—ã—Ö –±–ª—é–¥: ${favorites.length}`);

    favorites.forEach((dish) => {
      console.log(`   - ${dish.name} (${dish.price} DIN)`);
    });
    console.log('');
  }

  // ==========================================
  // 10. –°–¢–ê–¢–ò–°–¢–ò–ö–ê
  // ==========================================

  console.log('üìä 13. –ü–æ–ª—É—á–µ–Ω–∏–µ –æ–±—â–µ–π —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏...');

  const stats = await db.getStats();

  console.log(`‚úÖ –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:`);
  console.log(`   –í—Å–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: ${stats.totalUsers}`);
  console.log(`   –í—Å–µ–≥–æ –∑–∞–∫–∞–∑–æ–≤: ${stats.totalOrders}`);
  console.log(`   –û–±—â–∞—è –≤—ã—Ä—É—á–∫–∞: ${stats.totalRevenue} DIN`);
  console.log(`   –ê–∫—Ç–∏–≤–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: ${stats.activeUsers}\n`);

  // ==========================================
  // 11. HEALTH CHECK
  // ==========================================

  console.log('üè• 14. –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è...');

  const isHealthy = await db.healthCheck();

  console.log(`${isHealthy ? '‚úÖ' : '‚ùå'} –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ: ${isHealthy ? 'OK' : '–û—à–∏–±–∫–∞'}\n`);

  console.log('üéâ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ!\n');
}

// –ó–∞–ø—É—Å–∫ –ø—Ä–∏–º–µ—Ä–∞
if (require.main === module) {
  main().catch((error) => {
    console.error('‚ùå –û—à–∏–±–∫–∞:', error.message);
    console.error(error.stack);
    process.exit(1);
  });
}

export { main };

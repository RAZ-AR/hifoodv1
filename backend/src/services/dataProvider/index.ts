import { IDataProvider } from './IDataProvider';
import { GoogleSheetsProvider } from './GoogleSheetsProvider';
import { SupabaseProvider } from './SupabaseProvider';

/**
 * –§–ê–ë–†–ò–ö–ê –î–õ–Ø –°–û–ó–î–ê–ù–ò–Ø DATA PROVIDER
 *
 * –ü–æ–∑–≤–æ–ª—è–µ—Ç –ª–µ–≥–∫–æ –ø–µ—Ä–µ–∫–ª—é—á–∞—Ç—å—Å—è –º–µ–∂–¥—É —Ä–∞–∑–Ω—ã–º–∏ –∏—Å—Ç–æ—á–Ω–∏–∫–∞–º–∏ –¥–∞–Ω–Ω—ã—Ö
 * —á–µ—Ä–µ–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
 *
 * –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:
 * ```typescript
 * import { getDataProvider } from './services/dataProvider';
 *
 * const db = getDataProvider();
 * const users = await db.getMenu();
 * ```
 */

export type DataProviderType = 'google_sheets' | 'supabase';

/**
 * –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –¥–ª—è Google Sheets
 */
interface GoogleSheetsConfig {
  type: 'google_sheets';
  spreadsheetId: string;
  credentials?: any;
}

/**
 * –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –¥–ª—è Supabase
 */
interface SupabaseConfig {
  type: 'supabase';
  supabaseUrl: string;
  supabaseKey: string;
}

export type DataProviderConfig = GoogleSheetsConfig | SupabaseConfig;

/**
 * –°–æ–∑–¥–∞–µ—Ç –ø—Ä–æ–≤–∞–π–¥–µ—Ä –¥–∞–Ω–Ω—ã—Ö –Ω–∞ –æ—Å–Ω–æ–≤–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
 */
export function createDataProvider(config: DataProviderConfig): IDataProvider {
  switch (config.type) {
    case 'google_sheets':
      return new GoogleSheetsProvider(config.spreadsheetId, config.credentials);

    case 'supabase':
      return new SupabaseProvider(config.supabaseUrl, config.supabaseKey);

    default:
      throw new Error(`–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —Ç–∏–ø –ø—Ä–æ–≤–∞–π–¥–µ—Ä–∞: ${(config as any).type}`);
  }
}

/**
 * –°–æ–∑–¥–∞–µ—Ç –ø—Ä–æ–≤–∞–π–¥–µ—Ä –¥–∞–Ω–Ω—ã—Ö –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
 *
 * –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è:
 * - DATA_PROVIDER: 'google_sheets' | 'supabase'
 *
 * –î–ª—è Google Sheets:
 * - GOOGLE_SPREADSHEET_ID: ID —Ç–∞–±–ª–∏—Ü—ã
 * - GOOGLE_APPLICATION_CREDENTIALS: –ø—É—Ç—å –∫ JSON —Ñ–∞–π–ª—É —Å credentials
 *
 * –î–ª—è Supabase:
 * - SUPABASE_URL: URL –ø—Ä–æ–µ–∫—Ç–∞ Supabase
 * - SUPABASE_KEY: Anon/Service key
 */
export function getDataProvider(): IDataProvider {
  const providerType = (process.env.DATA_PROVIDER || 'google_sheets') as DataProviderType;

  console.log(`üì¶ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Data Provider: ${providerType}`);

  switch (providerType) {
    case 'google_sheets': {
      const spreadsheetId = process.env.GOOGLE_SPREADSHEET_ID;

      if (!spreadsheetId) {
        throw new Error(
          'GOOGLE_SPREADSHEET_ID –Ω–µ —É–∫–∞–∑–∞–Ω –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è.\n' +
            '–£–∫–∞–∂–∏—Ç–µ ID –≤–∞—à–µ–π Google Sheets —Ç–∞–±–ª–∏—Ü—ã.'
        );
      }

      console.log(`‚úÖ Google Sheets Provider –ø–æ–¥–∫–ª—é—á–µ–Ω (ID: ${spreadsheetId})`);

      return new GoogleSheetsProvider(spreadsheetId);
    }

    case 'supabase': {
      const supabaseUrl = process.env.SUPABASE_URL;
      const supabaseKey = process.env.SUPABASE_KEY;

      if (!supabaseUrl || !supabaseKey) {
        throw new Error(
          'SUPABASE_URL –∏ SUPABASE_KEY –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å —É–∫–∞–∑–∞–Ω—ã –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è.\n' +
            '–ü–æ–ª—É—á–∏—Ç–µ –∏—Ö –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö –ø—Ä–æ–µ–∫—Ç–∞ Supabase: https://app.supabase.com'
        );
      }

      console.log(`‚úÖ Supabase Provider –ø–æ–¥–∫–ª—é—á–µ–Ω (URL: ${supabaseUrl})`);

      return new SupabaseProvider(supabaseUrl, supabaseKey);
    }

    default:
      throw new Error(
        `–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —Ç–∏–ø –ø—Ä–æ–≤–∞–π–¥–µ—Ä–∞: ${providerType}\n` +
          '–ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–µ —Ç–∏–ø—ã: google_sheets, supabase'
      );
  }
}

/**
 * Singleton –∏–Ω—Å—Ç–∞–Ω—Å –ø—Ä–æ–≤–∞–π–¥–µ—Ä–∞
 * –°–æ–∑–¥–∞–µ—Ç—Å—è –æ–¥–∏–Ω —Ä–∞–∑ –ø—Ä–∏ –ø–µ—Ä–≤–æ–º –≤—ã–∑–æ–≤–µ
 */
let dataProviderInstance: IDataProvider | null = null;

/**
 * –ü–æ–ª—É—á–∏—Ç—å singleton –∏–Ω—Å—Ç–∞–Ω—Å –ø—Ä–æ–≤–∞–π–¥–µ—Ä–∞
 * –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —ç—Ç–æ—Ç –º–µ—Ç–æ–¥ –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏
 */
export function getDataProviderInstance(): IDataProvider {
  if (!dataProviderInstance) {
    dataProviderInstance = getDataProvider();
  }
  return dataProviderInstance;
}

/**
 * –°–±—Ä–æ—Å–∏—Ç—å singleton –∏–Ω—Å—Ç–∞–Ω—Å (–¥–ª—è —Ç–µ—Å—Ç–æ–≤)
 */
export function resetDataProviderInstance(): void {
  dataProviderInstance = null;
}

// –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Ç–∏–ø—ã –∏ –∫–ª–∞—Å—Å—ã
export { IDataProvider } from './IDataProvider';
export { GoogleSheetsProvider } from './GoogleSheetsProvider';
export { SupabaseProvider } from './SupabaseProvider';
